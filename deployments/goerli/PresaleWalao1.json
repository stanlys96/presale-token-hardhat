{
  "address": "0xAdd10494fB1BA37515F3a84d0A6e4d1372dB7748",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_wesAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "BuyToken",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "EthToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "USDT",
      "outputs": [
        {
          "internalType": "contract IToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "WES",
      "outputs": [
        {
          "internalType": "contract IToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amountRaisedEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "amountRaisedUSDT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "buyTokenEth",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "buyTokenUSDT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_inDollar",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_inEth",
          "type": "uint256"
        }
      ],
      "name": "changeMinimumLimits",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "changeOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_price",
          "type": "uint256"
        }
      ],
      "name": "changePrice",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "name": "changeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_total",
          "type": "uint256"
        }
      ],
      "name": "changeTotalSupply",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_USDT",
          "type": "address"
        }
      ],
      "name": "changeUSDT",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractBalanceEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractBalanceUSDT",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "divider",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getContractTokenApproval",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getCurrentTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getLatestPriceEth",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getProgress",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "_percent",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumDollar",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minimumETH",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "preSaleStartTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "presaleStatus",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "priceFeedEth",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startTime",
          "type": "uint256"
        }
      ],
      "name": "setPreSaleTime",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "soldToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "state",
          "type": "bool"
        }
      ],
      "name": "stopPresale",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "tokenPerUsd",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFundsEth",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IToken",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferTokens",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "usdtToToken",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "users",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "Eth_balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "busd_balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "usdt_balance",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "token_balance",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x3ba928693c08bf243dde0b479333f6bf7afbf30be968efa05020b858c8dac359",
  "receipt": {
    "to": null,
    "from": "0xf3f1A4EadA0D8a35d82421E303a139EBDC8E823f",
    "contractAddress": "0xAdd10494fB1BA37515F3a84d0A6e4d1372dB7748",
    "transactionIndex": 23,
    "gasUsed": "2381926",
    "logsBloom": "0x
    "blockHash": "0x3c10836788e797865a8d91f78904ef36ff4f2a599b0f62ff477707e8edbf3de8",
    "transactionHash": "0x3ba928693c08bf243dde0b479333f6bf7afbf30be968efa05020b858c8dac359",
    "logs": [],
    "blockNumber": 9327153,
    "cumulativeGasUsed": "7803486",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x3b1235FB07403525407aC508B41Ec85B81B2D703"
  ],
  "numDeployments": 2,
  "solcInputHash": "f95f5c8e2cb47a54b9d98db4bacbc2c8",
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_wesAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"BuyToken\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"EthToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"USDT\",\"outputs\":[{\"internalType\":\"contract IToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"WES\",\"outputs\":[{\"internalType\":\"contract IToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountRaisedEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"amountRaisedUSDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"buyTokenEth\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"buyTokenUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_inDollar\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_inEth\",\"type\":\"uint256\"}],\"name\":\"changeMinimumLimits\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"changeOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_price\",\"type\":\"uint256\"}],\"name\":\"changePrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"changeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_total\",\"type\":\"uint256\"}],\"name\":\"changeTotalSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_USDT\",\"type\":\"address\"}],\"name\":\"changeUSDT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractBalanceEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractBalanceUSDT\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"divider\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getContractTokenApproval\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getCurrentTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLatestPriceEth\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getProgress\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_percent\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumDollar\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minimumETH\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"preSaleStartTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"presaleStatus\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"priceFeedEth\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startTime\",\"type\":\"uint256\"}],\"name\":\"setPreSaleTime\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"soldToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"state\",\"type\":\"bool\"}],\"name\":\"stopPresale\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tokenPerUsd\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFundsEth\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IToken\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"usdtToToken\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"users\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"Eth_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"busd_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"usdt_balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"token_balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/PresaleWalao1.sol\":\"PresaleWalao1\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/PresaleWalao1.sol\":{\"content\":\"/**\\n *Submitted for verification at Etherscan.io on 2023-02-12\\n*/\\n\\npragma solidity ^0.8.15;\\n\\n//SPDX-License-Identifier: MIT Licensed\\n\\ninterface IToken {\\n    function name() external view returns (string memory);\\n\\n    function symbol() external view returns (string memory);\\n\\n    function decimals() external view returns (uint8);\\n\\n    function totalSupply() external view returns (uint256);\\n\\n    function balanceOf(address owner) external view returns (uint256);\\n\\n    function allowance(address owner, address spender)\\n        external\\n        view\\n        returns (uint256);\\n\\n    function approve(address spender, uint256 value) external;\\n\\n    function transfer(address to, uint256 value) external;\\n\\n    function transferFrom(\\n        address from,\\n        address to,\\n        uint256 value\\n    ) external;\\n\\n    event Approval(\\n        address indexed owner,\\n        address indexed spender,\\n        uint256 value\\n    );\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\n}\\n\\ninterface AggregatorV3Interface {\\n    function decimals() external view returns (uint8);\\n\\n    function description() external view returns (string memory);\\n\\n    function version() external view returns (uint256);\\n\\n    function getRoundData(uint80 _roundId)\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n\\n    function latestRoundData()\\n        external\\n        view\\n        returns (\\n            uint80 roundId,\\n            int256 answer,\\n            uint256 startedAt,\\n            uint256 updatedAt,\\n            uint80 answeredInRound\\n        );\\n}\\n\\ncontract PresaleWalao1 {\\n    using SafeMath for uint256;\\n\\n    IToken public WES;\\n    IToken public USDT = IToken(0xdAC17F958D2ee523a2206206994597C13D831ec7);\\n    AggregatorV3Interface public priceFeedEth;\\n\\n    address payable public owner;\\n\\n    uint256 public tokenPerUsd = 4761904760000000000; //4.7 tokens for $1\\n    uint256 public preSaleStartTime;\\n    uint256 public soldToken;\\n    uint256 public totalSupply = 1500000 ether; //presale tokens \\n    uint256 public amountRaisedEth;\\n    uint256 public amountRaisedUSDT; \\n    uint256 public minimumDollar = 100000000; //min buy usdt\\n    uint256 public minimumETH = 0.05 ether; //min buy eth\\n    uint256 public constant divider = 100;\\n\\n    bool public presaleStatus;\\n\\n    struct user {\\n        uint256 Eth_balance;\\n        uint256 busd_balance;\\n        uint256 usdt_balance;\\n        uint256 token_balance;\\n    }\\n\\n    mapping(address => user) public users;\\n\\n    modifier onlyOwner() {\\n        require(msg.sender == owner, \\\"PRESALE: Not an owner\\\");\\n        _;\\n    }\\n\\n    event BuyToken(address indexed _user, uint256 indexed _amount);\\n\\n    constructor(address _wesAddress) {\\n        owner = payable(0xf3f1A4EadA0D8a35d82421E303a139EBDC8E823f);\\n        priceFeedEth = AggregatorV3Interface(\\n            0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419\\n        );\\n        preSaleStartTime = block.timestamp;\\n        presaleStatus = true;\\n        WES = IToken(_wesAddress);\\n    }\\n\\n    receive() external payable {}\\n\\n    // to get real time price of Eth\\n    function getLatestPriceEth() public view returns (uint256) {\\n        (, int256 price, , , ) = priceFeedEth.latestRoundData();\\n        return uint256(price);\\n    }\\n\\n    // to buy token during preSale time with Eth => for web3 use\\n\\n    function buyTokenEth() public payable {\\n        require(presaleStatus == true, \\\"Presale : Presale is finished\\\");\\n        require(msg.value >= minimumETH, \\\"Presale : Unsuitable Amount\\\");\\n        require(soldToken <= totalSupply, \\\"All Sold\\\");\\n\\n        uint256 numberOfTokens;\\n        numberOfTokens = EthToToken(msg.value);\\n        WES.transfer(msg.sender, numberOfTokens);\\n\\n        soldToken = soldToken + (numberOfTokens);\\n        amountRaisedEth = amountRaisedEth + (msg.value);\\n        users[msg.sender].Eth_balance =\\n            users[msg.sender].Eth_balance +\\n            (msg.value);\\n        users[msg.sender].token_balance =\\n            users[msg.sender].token_balance +\\n            (numberOfTokens);\\n    }\\n\\n    // to buy token during preSale time with USDT => for web3 use\\n    function buyTokenUSDT(uint256 amount) public {\\n        require(presaleStatus == true, \\\"Presale : Presale is finished\\\");\\n        require(amount >= minimumDollar,\\\"Minimum Amount is $100\\\"); \\n        require(soldToken <= totalSupply, \\\"All Sold\\\");\\n\\n        USDT.transferFrom(msg.sender, address(this), amount);\\n\\n        uint256 numberOfTokens;\\n        numberOfTokens = usdtToToken(amount);\\n\\n        WES.transfer(msg.sender, numberOfTokens);\\n        soldToken = soldToken + (numberOfTokens);\\n        amountRaisedUSDT = amountRaisedUSDT + (amount);\\n        users[msg.sender].usdt_balance =\\n            users[msg.sender].usdt_balance +\\n            (amount);\\n        users[msg.sender].token_balance =\\n            users[msg.sender].token_balance +\\n            (numberOfTokens);\\n    }\\n\\n    // to check percentage of token sold\\n    function getProgress() public view returns (uint256 _percent) {\\n        uint256 remaining = totalSupply -\\n            (soldToken / (10**(WES.decimals())));\\n        remaining = (remaining * (divider)) / (totalSupply);\\n        uint256 hundred = 100;\\n        return hundred - (remaining);\\n    }\\n \\n    function stopPresale(bool state) external onlyOwner {\\n        presaleStatus = state;\\n    }\\n\\n    // to check number of token for given Eth\\n    function EthToToken(uint256 _amount) public view returns (uint256) {\\n        uint256 EthToUsd = (_amount * (getLatestPriceEth())) / (1 ether);\\n        uint256 numberOfTokens = (EthToUsd * (tokenPerUsd)) / (1e8);\\n        return numberOfTokens;\\n    }\\n\\n    // to check number of token for given usdt\\n    function usdtToToken(uint256 _amount) public view returns (uint256) {\\n        uint256 numberOfTokens = (_amount * (tokenPerUsd)) / (1e6);\\n        return numberOfTokens;\\n    }\\n\\n    // to change Price of the token\\n    function changePrice(uint256 _price) external onlyOwner {\\n        tokenPerUsd = _price;\\n    }\\n\\n    // to change preSale time duration\\n    function setPreSaleTime(uint256 _startTime) external onlyOwner {\\n        preSaleStartTime = _startTime;\\n    }\\n\\n    // transfer ownership\\n    function changeOwner(address payable _newOwner) external onlyOwner {\\n        owner = _newOwner;\\n    }\\n\\n    // change tokens\\n    function changeToken(address _token) external onlyOwner {\\n        WES = IToken(_token);\\n    }\\n\\n       // change minimum buy\\n    function changeMinimumLimits(uint256 _inDollar, uint256 _inEth) external onlyOwner {\\n        minimumDollar = _inDollar;\\n        minimumETH    = _inEth;\\n    }\\n    // change supply\\n    function changeTotalSupply(uint256 _total) external onlyOwner {\\n        totalSupply = _total;\\n    }\\n    //change USDT\\n    function changeUSDT(address _USDT) external onlyOwner {\\n        USDT = IToken(_USDT);\\n    }\\n\\n    // to draw funds for liquidity\\n    function transferFundsEth(uint256 _value) external onlyOwner {\\n        owner.transfer(_value);\\n    }\\n\\n    // to draw out tokens\\n    function transferTokens(IToken token, uint256 _value) external onlyOwner {\\n        token.transfer(msg.sender, _value);\\n    }\\n\\n    // to get current UTC time\\n    function getCurrentTime() external view returns (uint256) {\\n        return block.timestamp;\\n    }\\n\\n    // to get contract Eth balance\\n    function contractBalanceEth() external view returns (uint256) {\\n        return address(this).balance;\\n    }\\n\\n    //to get contract USDT balance\\n    function contractBalanceUSDT() external view returns (uint256) {\\n        return USDT.balanceOf(address(this));\\n    }\\n\\n    // to get contract token balance\\n    function getContractTokenApproval() external view returns (uint256) {\\n        return WES.allowance(owner, address(this));\\n    }\\n}\\n\\nlibrary SafeMath {\\n    function add(uint256 a, uint256 b) internal pure returns (uint256) {\\n        uint256 c = a + b;\\n        require(c >= a, \\\"SafeMath: addition overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function sub(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return sub(a, b, \\\"SafeMath: subtraction overflow\\\");\\n    }\\n\\n    function sub(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b <= a, errorMessage);\\n        uint256 c = a - b;\\n\\n        return c;\\n    }\\n\\n    function mul(uint256 a, uint256 b) internal pure returns (uint256) {\\n        // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\\n        // benefit is lost if 'b' is also tested.\\n        // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\\n        if (a == 0) {\\n            return 0;\\n        }\\n\\n        uint256 c = a * b;\\n        require(c / a == b, \\\"SafeMath: multiplication overflow\\\");\\n\\n        return c;\\n    }\\n\\n    function div(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return div(a, b, \\\"SafeMath: division by zero\\\");\\n    }\\n\\n    function div(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b > 0, errorMessage);\\n        uint256 c = a / b;\\n        // assert(a == b * c + a % b); // There is no case in which this doesn't hold\\n\\n        return c;\\n    }\\n\\n    function mod(uint256 a, uint256 b) internal pure returns (uint256) {\\n        return mod(a, b, \\\"SafeMath: modulo by zero\\\");\\n    }\\n\\n    function mod(\\n        uint256 a,\\n        uint256 b,\\n        string memory errorMessage\\n    ) internal pure returns (uint256) {\\n        require(b != 0, errorMessage);\\n        return a % b;\\n    }\\n}\",\"keccak256\":\"0x52e93767419643b1e759a1825120a2a84be849120988d4d2ac32d2a24df36da8\",\"license\":\"MIT Licensed\"}},\"version\":1}",
  "bytecode": "0x608060405273dac17f958d2ee523a2206206994597c13d831ec7600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550674215af264a0ab0006004556a013da329b63364718000006007556305f5e100600a5566b1a2bc2ec50000600b553480156200009457600080fd5b5060405162002889380380620028898339818101604052810190620000ba919062000237565b73f3f1a4eada0d8a35d82421e303a139ebdc8e823f600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550735f4ec3df9cbd43714fe2740f5e3616155c5b8419600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550426005819055506001600c60006101000a81548160ff021916908315150217905550806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505062000269565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001ff82620001d2565b9050919050565b6200021181620001f2565b81146200021d57600080fd5b50565b600081519050620002318162000206565b92915050565b60006020828403121562000250576200024f620001cd565b5b6000620002608482850162000220565b91505092915050565b61261080620002796000396000f3fe6080604052600436106102085760003560e01c80636769d1f911610118578063a87430ba116100a0578063bec3fa171161006f578063bec3fa1714610714578063c54e44eb1461073d578063c618540a14610768578063de03167914610791578063f63bd635146107ba5761020f565b8063a87430ba14610655578063acfb235514610695578063b285ad3c146106c0578063b5e75e1c146106eb5761020f565b8063939c4456116100e7578063939c445614610582578063a1e98a6d146105ad578063a2b40d19146105d8578063a4d21e3b14610601578063a6f9dae11461062c5761020f565b80636769d1f9146104f757806373279eb0146105225780638da5cb5b1461052c5780638e50c931146105575761020f565b8063405fb9441161019b578063486047dc1161016a578063486047dc1461041457806352e9732614610451578063639869a01461047a578063651b5167146104a357806366829b16146104ce5761020f565b8063405fb9441461036a57806343fd1be21461039557806346906982146103c05780634782e407146103eb5761020f565b806329cb924d116101d757806329cb924d146102be578063321c1352146102e9578063378efa37146103145780633b79fdd91461033f5761020f565b806306d65af3146102145780630f0e4f731461023f57806318160ddd1461026857806321c880ae146102935761020f565b3661020f57005b600080fd5b34801561022057600080fd5b506102296107f7565b6040516102369190611a6c565b60405180910390f35b34801561024b57600080fd5b5061026660048036038101906102619190611ab8565b6107fd565b005b34801561027457600080fd5b5061027d610897565b60405161028a9190611a6c565b60405180910390f35b34801561029f57600080fd5b506102a861089d565b6040516102b59190611b64565b60405180910390f35b3480156102ca57600080fd5b506102d36108c3565b6040516102e09190611a6c565b60405180910390f35b3480156102f557600080fd5b506102fe6108cb565b60405161030b9190611ba0565b60405180910390f35b34801561032057600080fd5b506103296108ef565b6040516103369190611a6c565b60405180910390f35b34801561034b57600080fd5b506103546108f4565b6040516103619190611a6c565b60405180910390f35b34801561037657600080fd5b5061037f610995565b60405161038c9190611a6c565b60405180910390f35b3480156103a157600080fd5b506103aa61099b565b6040516103b79190611a6c565b60405180910390f35b3480156103cc57600080fd5b506103d5610a61565b6040516103e29190611a6c565b60405180910390f35b3480156103f757600080fd5b50610412600480360381019061040d9190611bf9565b610a67565b005b34801561042057600080fd5b5061043b60048036038101906104369190611ab8565b610b3b565b6040516104489190611a6c565b60405180910390f35b34801561045d57600080fd5b5061047860048036038101906104739190611ab8565b610b65565b005b34801561048657600080fd5b506104a1600480360381019061049c9190611c5e565b610bff565b005b3480156104af57600080fd5b506104b8610cac565b6040516104c59190611a6c565b60405180910390f35b3480156104da57600080fd5b506104f560048036038101906104f09190611bf9565b610cb4565b005b34801561050357600080fd5b5061050c610d87565b6040516105199190611a6c565b60405180910390f35b61052a610d8d565b005b34801561053857600080fd5b5061054161105c565b60405161054e9190611cac565b60405180910390f35b34801561056357600080fd5b5061056c611082565b6040516105799190611a6c565b60405180910390f35b34801561058e57600080fd5b50610597611125565b6040516105a49190611a6c565b60405180910390f35b3480156105b957600080fd5b506105c2611214565b6040516105cf9190611a6c565b60405180910390f35b3480156105e457600080fd5b506105ff60048036038101906105fa9190611ab8565b61121a565b005b34801561060d57600080fd5b506106166112b4565b6040516106239190611a6c565b60405180910390f35b34801561063857600080fd5b50610653600480360381019061064e9190611cf3565b6112ba565b005b34801561066157600080fd5b5061067c60048036038101906106779190611bf9565b61138e565b60405161068c9493929190611d20565b60405180910390f35b3480156106a157600080fd5b506106aa6113be565b6040516106b79190611d74565b60405180910390f35b3480156106cc57600080fd5b506106d56113d1565b6040516106e29190611a6c565b60405180910390f35b3480156106f757600080fd5b50610712600480360381019061070d9190611ab8565b6113d7565b005b34801561072057600080fd5b5061073b60048036038101906107369190611dcd565b611738565b005b34801561074957600080fd5b50610752611839565b60405161075f9190611ba0565b60405180910390f35b34801561077457600080fd5b5061078f600480360381019061078a9190611e0d565b61185f565b005b34801561079d57600080fd5b506107b860048036038101906107b39190611ab8565b611901565b005b3480156107c657600080fd5b506107e160048036038101906107dc9190611ab8565b6119fd565b6040516107ee9190611a6c565b60405180910390f35b60055481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461088d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088490611eaa565b60405180910390fd5b8060058190555050565b60075481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600042905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606481565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109889190611f57565b5050509150508091505090565b60095481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518363ffffffff1660e01b8152600401610a1b929190612002565b602060405180830381865afa158015610a38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5c919061202b565b905090565b60085481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aee90611eaa565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080620f424060045484610b509190612087565b610b5a9190612110565b905080915050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bec90611eaa565b60405180910390fd5b8060078190555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8690611eaa565b60405180910390fd5b80600c60006101000a81548160ff02191690831515021790555050565b600047905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3b90611eaa565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60065481565b60011515600c60009054906101000a900460ff16151514610de3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dda9061218d565b60405180910390fd5b600b54341015610e28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1f906121f9565b60405180910390fd5b6007546006541115610e6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6690612265565b60405180910390fd5b6000610e7a346119fd565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610ed7929190612285565b600060405180830381600087803b158015610ef157600080fd5b505af1158015610f05573d6000803e3d6000fd5b5050505080600654610f1791906122ae565b60068190555034600854610f2b91906122ae565b60088190555034600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610f7f91906122ae565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015461101391906122ae565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110df9190612304565b602060405180830381865afa1580156110fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611120919061202b565b905090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b79190612358565b600a6111c391906124b8565b6006546111d09190612110565b6007546111dd9190612503565b90506007546064826111ef9190612087565b6111f99190612110565b9050600060649050818161120d9190612503565b9250505090565b60045481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a190611eaa565b60405180910390fd5b8060048190555050565b600a5481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461134a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134190611eaa565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600d6020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b600c60009054906101000a900460ff1681565b600b5481565b60011515600c60009054906101000a900460ff1615151461142d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114249061218d565b60405180910390fd5b600a54811015611472576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146990612583565b60405180910390fd5b60075460065411156114b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b090612265565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401611518939291906125a3565b600060405180830381600087803b15801561153257600080fd5b505af1158015611546573d6000803e3d6000fd5b50505050600061155582610b3b565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016115b2929190612285565b600060405180830381600087803b1580156115cc57600080fd5b505af11580156115e0573d6000803e3d6000fd5b50505050806006546115f291906122ae565b6006819055508160095461160691906122ae565b60098190555081600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015461165a91906122ae565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555080600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546116ee91906122ae565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117bf90611eaa565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611803929190612285565b600060405180830381600087803b15801561181d57600080fd5b505af1158015611831573d6000803e3d6000fd5b505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118e690611eaa565b60405180910390fd5b81600a8190555080600b819055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611991576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198890611eaa565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156119f9573d6000803e3d6000fd5b5050565b600080670de0b6b3a7640000611a116108f4565b84611a1c9190612087565b611a269190612110565b905060006305f5e10060045483611a3d9190612087565b611a479190612110565b90508092505050919050565b6000819050919050565b611a6681611a53565b82525050565b6000602082019050611a816000830184611a5d565b92915050565b600080fd5b611a9581611a53565b8114611aa057600080fd5b50565b600081359050611ab281611a8c565b92915050565b600060208284031215611ace57611acd611a87565b5b6000611adc84828501611aa3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611b2a611b25611b2084611ae5565b611b05565b611ae5565b9050919050565b6000611b3c82611b0f565b9050919050565b6000611b4e82611b31565b9050919050565b611b5e81611b43565b82525050565b6000602082019050611b796000830184611b55565b92915050565b6000611b8a82611b31565b9050919050565b611b9a81611b7f565b82525050565b6000602082019050611bb56000830184611b91565b92915050565b6000611bc682611ae5565b9050919050565b611bd681611bbb565b8114611be157600080fd5b50565b600081359050611bf381611bcd565b92915050565b600060208284031215611c0f57611c0e611a87565b5b6000611c1d84828501611be4565b91505092915050565b60008115159050919050565b611c3b81611c26565b8114611c4657600080fd5b50565b600081359050611c5881611c32565b92915050565b600060208284031215611c7457611c73611a87565b5b6000611c8284828501611c49565b91505092915050565b6000611c9682611ae5565b9050919050565b611ca681611c8b565b82525050565b6000602082019050611cc16000830184611c9d565b92915050565b611cd081611c8b565b8114611cdb57600080fd5b50565b600081359050611ced81611cc7565b92915050565b600060208284031215611d0957611d08611a87565b5b6000611d1784828501611cde565b91505092915050565b6000608082019050611d356000830187611a5d565b611d426020830186611a5d565b611d4f6040830185611a5d565b611d5c6060830184611a5d565b95945050505050565b611d6e81611c26565b82525050565b6000602082019050611d896000830184611d65565b92915050565b6000611d9a82611bbb565b9050919050565b611daa81611d8f565b8114611db557600080fd5b50565b600081359050611dc781611da1565b92915050565b60008060408385031215611de457611de3611a87565b5b6000611df285828601611db8565b9250506020611e0385828601611aa3565b9150509250929050565b60008060408385031215611e2457611e23611a87565b5b6000611e3285828601611aa3565b9250506020611e4385828601611aa3565b9150509250929050565b600082825260208201905092915050565b7f50524553414c453a204e6f7420616e206f776e65720000000000000000000000600082015250565b6000611e94601583611e4d565b9150611e9f82611e5e565b602082019050919050565b60006020820190508181036000830152611ec381611e87565b9050919050565b600069ffffffffffffffffffff82169050919050565b611ee981611eca565b8114611ef457600080fd5b50565b600081519050611f0681611ee0565b92915050565b6000819050919050565b611f1f81611f0c565b8114611f2a57600080fd5b50565b600081519050611f3c81611f16565b92915050565b600081519050611f5181611a8c565b92915050565b600080600080600060a08688031215611f7357611f72611a87565b5b6000611f8188828901611ef7565b9550506020611f9288828901611f2d565b9450506040611fa388828901611f42565b9350506060611fb488828901611f42565b9250506080611fc588828901611ef7565b9150509295509295909350565b6000611fdd82611b31565b9050919050565b611fed81611fd2565b82525050565b611ffc81611bbb565b82525050565b60006040820190506120176000830185611fe4565b6120246020830184611ff3565b9392505050565b60006020828403121561204157612040611a87565b5b600061204f84828501611f42565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061209282611a53565b915061209d83611a53565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156120d6576120d5612058565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061211b82611a53565b915061212683611a53565b925082612136576121356120e1565b5b828204905092915050565b7f50726573616c65203a2050726573616c652069732066696e6973686564000000600082015250565b6000612177601d83611e4d565b915061218282612141565b602082019050919050565b600060208201905081810360008301526121a68161216a565b9050919050565b7f50726573616c65203a20556e7375697461626c6520416d6f756e740000000000600082015250565b60006121e3601b83611e4d565b91506121ee826121ad565b602082019050919050565b60006020820190508181036000830152612212816121d6565b9050919050565b7f416c6c20536f6c64000000000000000000000000000000000000000000000000600082015250565b600061224f600883611e4d565b915061225a82612219565b602082019050919050565b6000602082019050818103600083015261227e81612242565b9050919050565b600060408201905061229a6000830185611ff3565b6122a76020830184611a5d565b9392505050565b60006122b982611a53565b91506122c483611a53565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156122f9576122f8612058565b5b828201905092915050565b60006020820190506123196000830184611ff3565b92915050565b600060ff82169050919050565b6123358161231f565b811461234057600080fd5b50565b6000815190506123528161232c565b92915050565b60006020828403121561236e5761236d611a87565b5b600061237c84828501612343565b91505092915050565b60008160011c9050919050565b6000808291508390505b60018511156123dc578086048111156123b8576123b7612058565b5b60018516156123c75780820291505b80810290506123d585612385565b945061239c565b94509492505050565b6000826123f557600190506124b1565b8161240357600090506124b1565b8160018114612419576002811461242357612452565b60019150506124b1565b60ff84111561243557612434612058565b5b8360020a91508482111561244c5761244b612058565b5b506124b1565b5060208310610133831016604e8410600b84101617156124875782820a90508381111561248257612481612058565b5b6124b1565b6124948484846001612392565b925090508184048111156124ab576124aa612058565b5b81810290505b9392505050565b60006124c382611a53565b91506124ce8361231f565b92506124fb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846123e5565b905092915050565b600061250e82611a53565b915061251983611a53565b92508282101561252c5761252b612058565b5b828203905092915050565b7f4d696e696d756d20416d6f756e74206973202431303000000000000000000000600082015250565b600061256d601683611e4d565b915061257882612537565b602082019050919050565b6000602082019050818103600083015261259c81612560565b9050919050565b60006060820190506125b86000830186611ff3565b6125c56020830185611ff3565b6125d26040830184611a5d565b94935050505056fea2646970667358221220f65e8e0298f83856751f1d8dc9711b9a5c345e9f9deab0780c3d5ccabdb54a4464736f6c634300080f0033",
  "deployedBytecode": "0x6080604052600436106102085760003560e01c80636769d1f911610118578063a87430ba116100a0578063bec3fa171161006f578063bec3fa1714610714578063c54e44eb1461073d578063c618540a14610768578063de03167914610791578063f63bd635146107ba5761020f565b8063a87430ba14610655578063acfb235514610695578063b285ad3c146106c0578063b5e75e1c146106eb5761020f565b8063939c4456116100e7578063939c445614610582578063a1e98a6d146105ad578063a2b40d19146105d8578063a4d21e3b14610601578063a6f9dae11461062c5761020f565b80636769d1f9146104f757806373279eb0146105225780638da5cb5b1461052c5780638e50c931146105575761020f565b8063405fb9441161019b578063486047dc1161016a578063486047dc1461041457806352e9732614610451578063639869a01461047a578063651b5167146104a357806366829b16146104ce5761020f565b8063405fb9441461036a57806343fd1be21461039557806346906982146103c05780634782e407146103eb5761020f565b806329cb924d116101d757806329cb924d146102be578063321c1352146102e9578063378efa37146103145780633b79fdd91461033f5761020f565b806306d65af3146102145780630f0e4f731461023f57806318160ddd1461026857806321c880ae146102935761020f565b3661020f57005b600080fd5b34801561022057600080fd5b506102296107f7565b6040516102369190611a6c565b60405180910390f35b34801561024b57600080fd5b5061026660048036038101906102619190611ab8565b6107fd565b005b34801561027457600080fd5b5061027d610897565b60405161028a9190611a6c565b60405180910390f35b34801561029f57600080fd5b506102a861089d565b6040516102b59190611b64565b60405180910390f35b3480156102ca57600080fd5b506102d36108c3565b6040516102e09190611a6c565b60405180910390f35b3480156102f557600080fd5b506102fe6108cb565b60405161030b9190611ba0565b60405180910390f35b34801561032057600080fd5b506103296108ef565b6040516103369190611a6c565b60405180910390f35b34801561034b57600080fd5b506103546108f4565b6040516103619190611a6c565b60405180910390f35b34801561037657600080fd5b5061037f610995565b60405161038c9190611a6c565b60405180910390f35b3480156103a157600080fd5b506103aa61099b565b6040516103b79190611a6c565b60405180910390f35b3480156103cc57600080fd5b506103d5610a61565b6040516103e29190611a6c565b60405180910390f35b3480156103f757600080fd5b50610412600480360381019061040d9190611bf9565b610a67565b005b34801561042057600080fd5b5061043b60048036038101906104369190611ab8565b610b3b565b6040516104489190611a6c565b60405180910390f35b34801561045d57600080fd5b5061047860048036038101906104739190611ab8565b610b65565b005b34801561048657600080fd5b506104a1600480360381019061049c9190611c5e565b610bff565b005b3480156104af57600080fd5b506104b8610cac565b6040516104c59190611a6c565b60405180910390f35b3480156104da57600080fd5b506104f560048036038101906104f09190611bf9565b610cb4565b005b34801561050357600080fd5b5061050c610d87565b6040516105199190611a6c565b60405180910390f35b61052a610d8d565b005b34801561053857600080fd5b5061054161105c565b60405161054e9190611cac565b60405180910390f35b34801561056357600080fd5b5061056c611082565b6040516105799190611a6c565b60405180910390f35b34801561058e57600080fd5b50610597611125565b6040516105a49190611a6c565b60405180910390f35b3480156105b957600080fd5b506105c2611214565b6040516105cf9190611a6c565b60405180910390f35b3480156105e457600080fd5b506105ff60048036038101906105fa9190611ab8565b61121a565b005b34801561060d57600080fd5b506106166112b4565b6040516106239190611a6c565b60405180910390f35b34801561063857600080fd5b50610653600480360381019061064e9190611cf3565b6112ba565b005b34801561066157600080fd5b5061067c60048036038101906106779190611bf9565b61138e565b60405161068c9493929190611d20565b60405180910390f35b3480156106a157600080fd5b506106aa6113be565b6040516106b79190611d74565b60405180910390f35b3480156106cc57600080fd5b506106d56113d1565b6040516106e29190611a6c565b60405180910390f35b3480156106f757600080fd5b50610712600480360381019061070d9190611ab8565b6113d7565b005b34801561072057600080fd5b5061073b60048036038101906107369190611dcd565b611738565b005b34801561074957600080fd5b50610752611839565b60405161075f9190611ba0565b60405180910390f35b34801561077457600080fd5b5061078f600480360381019061078a9190611e0d565b61185f565b005b34801561079d57600080fd5b506107b860048036038101906107b39190611ab8565b611901565b005b3480156107c657600080fd5b506107e160048036038101906107dc9190611ab8565b6119fd565b6040516107ee9190611a6c565b60405180910390f35b60055481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461088d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161088490611eaa565b60405180910390fd5b8060058190555050565b60075481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600042905090565b60008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b606481565b600080600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015610964573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109889190611f57565b5050509150508091505090565b60095481565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dd62ed3e600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16306040518363ffffffff1660e01b8152600401610a1b929190612002565b602060405180830381865afa158015610a38573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a5c919061202b565b905090565b60085481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610aee90611eaa565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600080620f424060045484610b509190612087565b610b5a9190612110565b905080915050919050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610bf5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bec90611eaa565b60405180910390fd5b8060078190555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610c8f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c8690611eaa565b60405180910390fd5b80600c60006101000a81548160ff02191690831515021790555050565b600047905090565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610d44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d3b90611eaa565b60405180910390fd5b806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60065481565b60011515600c60009054906101000a900460ff16151514610de3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dda9061218d565b60405180910390fd5b600b54341015610e28576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e1f906121f9565b60405180910390fd5b6007546006541115610e6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e6690612265565b60405180910390fd5b6000610e7a346119fd565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610ed7929190612285565b600060405180830381600087803b158015610ef157600080fd5b505af1158015610f05573d6000803e3d6000fd5b5050505080600654610f1791906122ae565b60068190555034600854610f2b91906122ae565b60088190555034600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060000154610f7f91906122ae565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000018190555080600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003015461101391906122ae565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206003018190555050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016110df9190612304565b602060405180830381865afa1580156110fc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611120919061202b565b905090565b60008060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa158015611193573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111b79190612358565b600a6111c391906124b8565b6006546111d09190612110565b6007546111dd9190612503565b90506007546064826111ef9190612087565b6111f99190612110565b9050600060649050818161120d9190612503565b9250505090565b60045481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146112aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a190611eaa565b60405180910390fd5b8060048190555050565b600a5481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461134a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161134190611eaa565b60405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600d6020528060005260406000206000915090508060000154908060010154908060020154908060030154905084565b600c60009054906101000a900460ff1681565b600b5481565b60011515600c60009054906101000a900460ff1615151461142d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114249061218d565b60405180910390fd5b600a54811015611472576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161146990612583565b60405180910390fd5b60075460065411156114b9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114b090612265565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330846040518463ffffffff1660e01b8152600401611518939291906125a3565b600060405180830381600087803b15801561153257600080fd5b505af1158015611546573d6000803e3d6000fd5b50505050600061155582610b3b565b905060008054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b81526004016115b2929190612285565b600060405180830381600087803b1580156115cc57600080fd5b505af11580156115e0573d6000803e3d6000fd5b50505050806006546115f291906122ae565b6006819055508160095461160691906122ae565b60098190555081600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002015461165a91906122ae565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206002018190555080600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301546116ee91906122ae565b600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600301819055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146117c8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016117bf90611eaa565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611803929190612285565b600060405180830381600087803b15801561181d57600080fd5b505af1158015611831573d6000803e3d6000fd5b505050505050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146118ef576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016118e690611eaa565b60405180910390fd5b81600a8190555080600b819055505050565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611991576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161198890611eaa565b60405180910390fd5b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f193505050501580156119f9573d6000803e3d6000fd5b5050565b600080670de0b6b3a7640000611a116108f4565b84611a1c9190612087565b611a269190612110565b905060006305f5e10060045483611a3d9190612087565b611a479190612110565b90508092505050919050565b6000819050919050565b611a6681611a53565b82525050565b6000602082019050611a816000830184611a5d565b92915050565b600080fd5b611a9581611a53565b8114611aa057600080fd5b50565b600081359050611ab281611a8c565b92915050565b600060208284031215611ace57611acd611a87565b5b6000611adc84828501611aa3565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6000611b2a611b25611b2084611ae5565b611b05565b611ae5565b9050919050565b6000611b3c82611b0f565b9050919050565b6000611b4e82611b31565b9050919050565b611b5e81611b43565b82525050565b6000602082019050611b796000830184611b55565b92915050565b6000611b8a82611b31565b9050919050565b611b9a81611b7f565b82525050565b6000602082019050611bb56000830184611b91565b92915050565b6000611bc682611ae5565b9050919050565b611bd681611bbb565b8114611be157600080fd5b50565b600081359050611bf381611bcd565b92915050565b600060208284031215611c0f57611c0e611a87565b5b6000611c1d84828501611be4565b91505092915050565b60008115159050919050565b611c3b81611c26565b8114611c4657600080fd5b50565b600081359050611c5881611c32565b92915050565b600060208284031215611c7457611c73611a87565b5b6000611c8284828501611c49565b91505092915050565b6000611c9682611ae5565b9050919050565b611ca681611c8b565b82525050565b6000602082019050611cc16000830184611c9d565b92915050565b611cd081611c8b565b8114611cdb57600080fd5b50565b600081359050611ced81611cc7565b92915050565b600060208284031215611d0957611d08611a87565b5b6000611d1784828501611cde565b91505092915050565b6000608082019050611d356000830187611a5d565b611d426020830186611a5d565b611d4f6040830185611a5d565b611d5c6060830184611a5d565b95945050505050565b611d6e81611c26565b82525050565b6000602082019050611d896000830184611d65565b92915050565b6000611d9a82611bbb565b9050919050565b611daa81611d8f565b8114611db557600080fd5b50565b600081359050611dc781611da1565b92915050565b60008060408385031215611de457611de3611a87565b5b6000611df285828601611db8565b9250506020611e0385828601611aa3565b9150509250929050565b60008060408385031215611e2457611e23611a87565b5b6000611e3285828601611aa3565b9250506020611e4385828601611aa3565b9150509250929050565b600082825260208201905092915050565b7f50524553414c453a204e6f7420616e206f776e65720000000000000000000000600082015250565b6000611e94601583611e4d565b9150611e9f82611e5e565b602082019050919050565b60006020820190508181036000830152611ec381611e87565b9050919050565b600069ffffffffffffffffffff82169050919050565b611ee981611eca565b8114611ef457600080fd5b50565b600081519050611f0681611ee0565b92915050565b6000819050919050565b611f1f81611f0c565b8114611f2a57600080fd5b50565b600081519050611f3c81611f16565b92915050565b600081519050611f5181611a8c565b92915050565b600080600080600060a08688031215611f7357611f72611a87565b5b6000611f8188828901611ef7565b9550506020611f9288828901611f2d565b9450506040611fa388828901611f42565b9350506060611fb488828901611f42565b9250506080611fc588828901611ef7565b9150509295509295909350565b6000611fdd82611b31565b9050919050565b611fed81611fd2565b82525050565b611ffc81611bbb565b82525050565b60006040820190506120176000830185611fe4565b6120246020830184611ff3565b9392505050565b60006020828403121561204157612040611a87565b5b600061204f84828501611f42565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061209282611a53565b915061209d83611a53565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156120d6576120d5612058565b5b828202905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061211b82611a53565b915061212683611a53565b925082612136576121356120e1565b5b828204905092915050565b7f50726573616c65203a2050726573616c652069732066696e6973686564000000600082015250565b6000612177601d83611e4d565b915061218282612141565b602082019050919050565b600060208201905081810360008301526121a68161216a565b9050919050565b7f50726573616c65203a20556e7375697461626c6520416d6f756e740000000000600082015250565b60006121e3601b83611e4d565b91506121ee826121ad565b602082019050919050565b60006020820190508181036000830152612212816121d6565b9050919050565b7f416c6c20536f6c64000000000000000000000000000000000000000000000000600082015250565b600061224f600883611e4d565b915061225a82612219565b602082019050919050565b6000602082019050818103600083015261227e81612242565b9050919050565b600060408201905061229a6000830185611ff3565b6122a76020830184611a5d565b9392505050565b60006122b982611a53565b91506122c483611a53565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156122f9576122f8612058565b5b828201905092915050565b60006020820190506123196000830184611ff3565b92915050565b600060ff82169050919050565b6123358161231f565b811461234057600080fd5b50565b6000815190506123528161232c565b92915050565b60006020828403121561236e5761236d611a87565b5b600061237c84828501612343565b91505092915050565b60008160011c9050919050565b6000808291508390505b60018511156123dc578086048111156123b8576123b7612058565b5b60018516156123c75780820291505b80810290506123d585612385565b945061239c565b94509492505050565b6000826123f557600190506124b1565b8161240357600090506124b1565b8160018114612419576002811461242357612452565b60019150506124b1565b60ff84111561243557612434612058565b5b8360020a91508482111561244c5761244b612058565b5b506124b1565b5060208310610133831016604e8410600b84101617156124875782820a90508381111561248257612481612058565b5b6124b1565b6124948484846001612392565b925090508184048111156124ab576124aa612058565b5b81810290505b9392505050565b60006124c382611a53565b91506124ce8361231f565b92506124fb7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846123e5565b905092915050565b600061250e82611a53565b915061251983611a53565b92508282101561252c5761252b612058565b5b828203905092915050565b7f4d696e696d756d20416d6f756e74206973202431303000000000000000000000600082015250565b600061256d601683611e4d565b915061257882612537565b602082019050919050565b6000602082019050818103600083015261259c81612560565b9050919050565b60006060820190506125b86000830186611ff3565b6125c56020830185611ff3565b6125d26040830184611a5d565b94935050505056fea2646970667358221220f65e8e0298f83856751f1d8dc9711b9a5c345e9f9deab0780c3d5ccabdb54a4464736f6c634300080f0033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 127,
        "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
        "label": "WES",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(IToken)77"
      },
      {
        "astId": 133,
        "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
        "label": "USDT",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(IToken)77"
      },
      {
        "astId": 136,
        "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
        "label": "priceFeedEth",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)121"
      },
      {
        "astId": 138,
        "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
        "label": "owner",
        "offset": 0,
        "slot": "3",
        "type": "t_address_payable"
      },
      {
        "astId": 141,
        "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
        "label": "tokenPerUsd",
        "offset": 0,
        "slot": "4",
        "type": "t_uint256"
      },
      {
        "astId": 143,
        "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
        "label": "preSaleStartTime",
        "offset": 0,
        "slot": "5",
        "type": "t_uint256"
      },
      {
        "astId": 145,
        "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
        "label": "soldToken",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 148,
        "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
        "label": "totalSupply",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      },
      {
        "astId": 150,
        "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
        "label": "amountRaisedEth",
        "offset": 0,
        "slot": "8",
        "type": "t_uint256"
      },
      {
        "astId": 152,
        "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
        "label": "amountRaisedUSDT",
        "offset": 0,
        "slot": "9",
        "type": "t_uint256"
      },
      {
        "astId": 155,
        "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
        "label": "minimumDollar",
        "offset": 0,
        "slot": "10",
        "type": "t_uint256"
      },
      {
        "astId": 158,
        "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
        "label": "minimumETH",
        "offset": 0,
        "slot": "11",
        "type": "t_uint256"
      },
      {
        "astId": 163,
        "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
        "label": "presaleStatus",
        "offset": 0,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 177,
        "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
        "label": "users",
        "offset": 0,
        "slot": "13",
        "type": "t_mapping(t_address,t_struct(user)172_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(AggregatorV3Interface)121": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_contract(IToken)77": {
        "encoding": "inplace",
        "label": "contract IToken",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_struct(user)172_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct PresaleWalao1.user)",
        "numberOfBytes": "32",
        "value": "t_struct(user)172_storage"
      },
      "t_struct(user)172_storage": {
        "encoding": "inplace",
        "label": "struct PresaleWalao1.user",
        "members": [
          {
            "astId": 165,
            "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
            "label": "Eth_balance",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 167,
            "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
            "label": "busd_balance",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 169,
            "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
            "label": "usdt_balance",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 171,
            "contract": "contracts/PresaleWalao1.sol:PresaleWalao1",
            "label": "token_balance",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "128"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}